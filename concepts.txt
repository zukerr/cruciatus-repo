NICE SPELL NAMES:
-Disintegrate
-Flame Orb
-Flameblast
-Incinerate



CHARACTER DESIGN:
1. PYROMANCER:

Resource:
1. Spirit: generated by lesser spells, and expended for more powerful ones. Min = 0, Max = 5
2. Ignition: generated by Flamestrike, expended by Flame Orb. Every stack has its own cooldown. ??No max stacks??.
	2.1 Iteration 2: It works just like a resource, therefore there is max amount you can have at a time. It starts depleting after a while of not using.
	2.2 Iteration 3: It it always depletes at a rate of X=1 per second.


Spell Summary:
1. Firebolt: Main filler spell. Generates 1 Spirit if hits an enemy. Has no cooldown.
2. Flamestrike: One of main damage spells. Has short cooldown (10-20s). Costs 2 Spirit. 
3. Disintegrate: Long cast time spell. Generates 2 Spirit if hits an enemy. Moves slower than Firebolt. 
4. Incinerate: Costs 1-3 Spirit. Gives a number of Ignition stacks proportional to Spirit spent. Has no cooldown. Deals damage proportional to Spirit spent. Long range narrow cone aoe.
5. Flame Orb: Sacrifices all Ignition stacks to create a flame orb with size proportional to ignition stacks (more stacks = bigger orb).
	When cast, its always the same size. Then it travels like a projectile to mouse targeted position and [linearly, logarithmically] grows bigger, 
	to be the desired size at destination. Deals aoe damage. 
6. Burning Rush: Utility dash spell.

Procs:
1. Recoil: Whenever you lose Ignition stack, you have 10% chance to gain Recoil proc. Stacks up to X=3 times. Gaining new stack refreshes uptime.
	Makes next Disintegrate instant cast.




OTHER:
-in dungeons, make pre-made checkpoints



VFX Details:

-Disintegrate:
	-2 part animation ->  if casted with proc, only second part plays
		Iteration 2: its just instant with proc, no animation
	
	-then: normal projectile spell
	

UNLOCKING SPELLS:

New spells(not core) are unlocked in towns by training, which consists of series of unique minigames for a particular spell. 
Unlocking a spell is not trivial, but rewarding experience.

CORE GAMEPLAY:
	Gameplay mainly consists of beating dungeons, each of which in a separate scene. Dungeons are skyrim-stylized with action combat: 
	a little bit of story telling through notes, sometimes through interactions with npcs, enemies(maybe talking with them). <-- LATER...
	Dark, harsh climate on most dungeons. 
	Every enemy is saved as a prefab, and has an adjustable loot table(when designing dungeons, you can manually adjust loot possible from each enemy.)
	At the end of the dungeon, there always is a boss(harder enemy, does not have to be very unique).

	LOOT:
		Loot is mainly equipment, which is unique -> each item is in a form of crystal. Player item slots are slots on a necklace.
		Each crystal is unique to its own slot. Works just like normal equipment. It is a text-based equipment system(skyrim sky-ui like).
	
	MAIN GAME LOOP:
		Dungeons are categorised. There are longer ones with unique themes, items and bosses, and normal ones.
		Game loop consists of X=10 normal dungeons, then unique dungeon, then town. 
		In town you can trade, train new spells, possibly do crafting, possibly do story quests.
		The order of towns after each dungeon set is predetermined.
		There is only one pool of normal dungeons: they have to be easily scalable to every set. 
		That means: for every set, game gets X=10 random dungeons from untaken ones. Than scales them to the current set number.
		Unique dungeons are specific to set. For example, there is 5 unique dungeons specific to set 1.
		After finishing the last normal dungeon in a set, the player gets presented random Y=3 unique dungeons from unique dungeon pool for the set.
		Player can choose which dungeon to delve into. Choosing is done to offset randomness of the possible unique loot
		(For situations where the player goes for a particular build which needs a particular item).
	
		REWARDS FOR DUNGEONS:
			There is possible loot from every mob of a dungeon.
			There are chests with loot throughout the dungeon hidden behind skyrim-like puzzles, additional enemies etc.
			Obviously, the best rewards are from the boss of the dungeon, and end chest. 
			After beating the dungeon player hops in a portal, and can choose from presented pernament player upgrade options.
		
NAME DESIGN:
	Names that sound good and would fit to the game:
		-Makuta
		-Madara
		-Diablo
		-Naruto
		-Dark Souls
		-Sekiro
		-Hades
		-Limbo
		-Amnesia
		-Mikasa
		-Exanima
		

		--> conclusion: 5-6 letters, 2-3 syllables, starts with a consonant
			->> 1. Cruciatus
			->> 2. Integro

GRAND VILLAIN:

-scary gore mask
-pipes going through flesh
-large spear or polearm like weapon
-glowing eyes
-heavy plate armor
-big guy (tall and well-built)

LOCKPICKING:
	Similar to skyrim, but instead of having large amount of low durability lockpicks, they are equippable items with high durability and other functions, such as lock
	level reductions etc.

SOUNDTRACK:
-skyrim-like music switching



CHARACTER STATS DESIGN:

	Offensive:
		-spellpower
		-critical hit chance
		-critical hit damage
		-cooldown reduction
		-cast time reduction
	
	Defensive:
		-armor
		-magic resistance
		-dodge chance
		
		-max life
		-lifelink
		-life regen value
		-life regen rate
		-life per kill
		
	
	Suffixes names:
		-of the Hawk
	-of the Bear
		-of the Tiger
	-of the Jaguar
	-of the Eagle
		-of the Wolf
		-of the Shark
		-of the Whale
		-of the Leech
	-of the Monkey
	-of the Bull
	-of the Crow
	-of the Dolphin
		-of the Cheetah
	-of the Falcon
	-of the Fox
		-of the Goat
	-of the Horse
	-of the Lion
		-of the Hyena
	-of the Locust
	-of the Leopard
	-of the Moose
	-of the Mouse
	-of the Nightingale
	-of the Ostrich
	-of the Otter
	-of the Owl
	-of the Ox
	-of the Panda
	-of the Parrot
	-of the Penguin
	-of the Rabbit
	-of the Raccoon
	-of the Rat
	-of the Raven
	-of the Reindeer
	-of the Rhino
	-of the Seal
	-of the Sheep
	-of the Skunk
	-of the Snake
	-of the Spider
	-of the Squirrel
	-of the Swan
	-of the Squid
		-of the Toad
	-of the Turkey
		-of the Turtle
		-of the Walrus
	-of the Wasp
	-of the Weasel
	-of the Wombat
	-of the Zebra
	



STORYTELLING DESIGN:

Each dungeon has its own story told from start to finish. Besides that, each dungeon takes part in telling the main story.
It is done through notes and misc objects spread through the dungeon.
The main story is told via "encrypted" notes -> which, when first encountered seem very misterious, and are seemingly gibberish.
Then, still very early in the game, there is a minigame introducted that revolves around decrypting main story notes.


SCALING DESIGN:

Main thing responsible for scaling of a particular dungeon is [dungeonIndex], which translates directly to [dungeonTier].
Tier is responsible for base of items that drop, i.e.: dungeon #3 -> tier 1 -> archer possibly drops rugged boots, 
if the same dungeon was rolled as dungeon #15 -> tier 3 -> archer is now called "skilled archer", looks differently(its a different in-game enemy), and possibly
drops leather boots.
Function that does the scaling is run when loading new dungeon, so when the player sees the game the dungeon is all scaled.


ITEMIZATION DESIGN:

??Skyrim-like itemization, i.e: whenever an archer dies, it drops all the items he had equipped, but with random stats(common, uncommon, rare).
??Higher tier items have a higher stat roll potential, i.e. tier 1: crit strike chance from 0.5 to 5.0, tier 3: crit strike chance from 0.5 to 7.0
The more items player has in the inventory, the stronger debuff he has(after a certain threshold, i.e. after [10] items you are slower or more dmg taken).


WORLD GENERATION DESIGN:
-Idea: Some rooms are predefined, normal dungeons can be generated randomly from predefined rooms


------------------------

SPELL UNLOCKING:

Options:
	1. Player has all abilities unlocked from beginning till the end
	2. Player unlocks abilities through 'leveling' -> rigid unlock order
	3. Player chooses, which ability to unlock on each 'level' -> fluent unlock order
	
		-> for 2. and 3.: In augment room, there is an npc that you can talk to. after doing so, you unlock a spell/spells.

	-> for now, option 2 seems like the most logical one


